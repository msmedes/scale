syntax = "proto3";

package scale;

message Empty {}


message GetRequest { 
  bytes key = 1; 
}

message GetResponse { 
  bytes value = 1;
}

message KeyTransferRequest { 
  bytes id = 1; 
  string addr = 2; 
}

message RemoteId { 
  bytes id = 1; 
}

message RemoteQuery { 
  bytes id = 1;
}

message Success {}

message ShutdownRequest {
  string essorAddr = 1;
  string clientAddr = 2;
}

message SetRequest {
  bytes key = 1;
  bytes value = 2;
}

message NodeMetadata {
  bytes id = 1;
  string addr = 2;
  bytes predecessorId = 3;
  string predecessorAddr = 4;
  bytes successorId = 5;
  string successorAddr = 6;
  repeated bytes fingerTableID = 7;
  string port = 8;
  repeated string keys = 9;
  repeated string fingerTableAddrs = 10;
}

message RemoteNode {
  bytes id = 1;
  string addr = 2;
  bool present = 3;
}

service Scale {
  rpc ClosestPrecedingFinger(RemoteQuery) returns (RemoteNode) {}
  rpc GetSuccessor(Empty) returns (RemoteNode) {}
  rpc GetPredecessor(Empty) returns (RemoteNode) {}
  rpc FindPredecessor(RemoteQuery) returns (RemoteNode) {}
  rpc FindSuccessor(RemoteQuery) returns (RemoteNode) {}
  rpc SetPredecessor(ShutdownRequest) returns (Empty) {}
  rpc SetSuccessor(ShutdownRequest) returns (Empty) {}
  rpc Notify(RemoteNode) returns (Success) {}
  rpc GetLocal(GetRequest) returns (GetResponse) {}
  rpc SetLocal(SetRequest) returns (Success) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Set(SetRequest) returns (Success) {}
  rpc GetNodeMetadata(Empty) returns (NodeMetadata) {}
  rpc Ping(Empty) returns (Success) {}
  rpc TransferKeys(KeyTransferRequest) returns (Success) {}
}
